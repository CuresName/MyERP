// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using 南岩ERP.TESTModels.TESTEFModels;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace 南岩ERP.TESTModels.TESTEFModels
{
    public partial class TESTContext
    {
        private ITESTContextProcedures _procedures;

        public virtual ITESTContextProcedures Procedures
        {
            get
            {
                if (_procedures is null) _procedures = new TESTContextProcedures(this);
                return _procedures;
            }
            set
            {
                _procedures = value;
            }
        }

        public ITESTContextProcedures GetProcedures()
        {
            return Procedures;
        }

        protected void OnModelCreatingGeneratedProcedures(ModelBuilder modelBuilder)
        {
        }
    }

    public partial class TESTContextProcedures : ITESTContextProcedures
    {
        private readonly TESTContext _context;

        public TESTContextProcedures(TESTContext context)
        {
            _context = context;
        }

        public virtual async Task<int> WIP_001_生產回報_不良品_記錄刪除Async(int? 不良品流水號, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "不良品流水號",
                    Value = 不良品流水號 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                parameterreturnValue,
            };
            var _ = await _context.Database.ExecuteSqlRawAsync("EXEC @returnValue = [dbo].[WIP_001_生產回報_不良品_記錄刪除] @不良品流水號 = @不良品流水號", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

        public virtual async Task<int> WIP_001_生產回報_不良品_記錄更新Async(int? 不良品流水號, int? 不良編號, int? 不良數量, string HOST_NAME, string HOST_IP, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "不良品流水號",
                    Value = 不良品流水號 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                new SqlParameter
                {
                    ParameterName = "不良編號",
                    Value = 不良編號 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                new SqlParameter
                {
                    ParameterName = "不良數量",
                    Value = 不良數量 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                new SqlParameter
                {
                    ParameterName = "HOST_NAME",
                    Size = 20,
                    Value = HOST_NAME ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "HOST_IP",
                    Size = 20,
                    Value = HOST_IP ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                parameterreturnValue,
            };
            var _ = await _context.Database.ExecuteSqlRawAsync("EXEC @returnValue = [dbo].[WIP_001_生產回報_不良品_記錄更新] @不良品流水號 = @不良品流水號, @不良編號 = @不良編號, @不良數量 = @不良數量, @HOST_NAME = @HOST_NAME, @HOST_IP = @HOST_IP", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

        public virtual async Task<int> WIP_001_生產回報_不良品_記錄新增Async(int? 回報編號, int? 不良編號, int? 不良數量, string HOST_NAME, string HOST_IP, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "回報編號",
                    Value = 回報編號 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                new SqlParameter
                {
                    ParameterName = "不良編號",
                    Value = 不良編號 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                new SqlParameter
                {
                    ParameterName = "不良數量",
                    Value = 不良數量 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                new SqlParameter
                {
                    ParameterName = "HOST_NAME",
                    Size = 20,
                    Value = HOST_NAME ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "HOST_IP",
                    Size = 20,
                    Value = HOST_IP ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                parameterreturnValue,
            };
            var _ = await _context.Database.ExecuteSqlRawAsync("EXEC @returnValue = [dbo].[WIP_001_生產回報_不良品_記錄新增] @回報編號 = @回報編號, @不良編號 = @不良編號, @不良數量 = @不良數量, @HOST_NAME = @HOST_NAME, @HOST_IP = @HOST_IP", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

        public virtual async Task<int> WIP_001_生產回報_記錄更新_DBAsync(int? 回報編號, string NO_WAFER, int? 片數, int? No_Die_量, string 結束回報, string 彈匣編號, string 彈匣編號2, string 彈匣編號3, string 彈匣編號4, string 彈匣編號5, string 彈匣編號6, string HOST_NAME, string HOST_IP, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "回報編號",
                    Value = 回報編號 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                new SqlParameter
                {
                    ParameterName = "NO_WAFER",
                    Size = 1,
                    Value = NO_WAFER ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "片數",
                    Value = 片數 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                new SqlParameter
                {
                    ParameterName = "No_Die_量",
                    Value = No_Die_量 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                new SqlParameter
                {
                    ParameterName = "結束回報",
                    Size = 1,
                    Value = 結束回報 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "彈匣編號",
                    Size = 20,
                    Value = 彈匣編號 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "彈匣編號2",
                    Size = 20,
                    Value = 彈匣編號2 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "彈匣編號3",
                    Size = 20,
                    Value = 彈匣編號3 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "彈匣編號4",
                    Size = 20,
                    Value = 彈匣編號4 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "彈匣編號5",
                    Size = 20,
                    Value = 彈匣編號5 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "彈匣編號6",
                    Size = 20,
                    Value = 彈匣編號6 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "HOST_NAME",
                    Size = 20,
                    Value = HOST_NAME ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "HOST_IP",
                    Size = 20,
                    Value = HOST_IP ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                parameterreturnValue,
            };
            var _ = await _context.Database.ExecuteSqlRawAsync("EXEC @returnValue = [dbo].[WIP_001_生產回報_記錄更新_DB] @回報編號 = @回報編號, @NO_WAFER = @NO_WAFER, @片數 = @片數, @No_Die_量 = @No_Die_量, @結束回報 = @結束回報, @彈匣編號 = @彈匣編號, @彈匣編號2 = @彈匣編號2, @彈匣編號3 = @彈匣編號3, @彈匣編號4 = @彈匣編號4, @彈匣編號5 = @彈匣編號5, @彈匣編號6 = @彈匣編號6, @HOST_NAME = @HOST_NAME, @HOST_IP = @HOST_IP", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

        public virtual async Task<int> WIP_001_生產回報_產出資料_記錄刪除Async(int? 產出編號, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "產出編號",
                    Value = 產出編號 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                parameterreturnValue,
            };
            var _ = await _context.Database.ExecuteSqlRawAsync("EXEC @returnValue = [dbo].[WIP_001_生產回報_產出資料_記錄刪除] @產出編號 = @產出編號", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

        public virtual async Task<int> WIP_001_生產回報_產出資料_記錄更新Async(int? 產出編號, DateTime? 生產日期, string 生產班別, string 生產機台, string 生產人員1, string 生產人員2, int? 產出數量, int? 不良數量, string HOST_NAME, string HOST_IP, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "產出編號",
                    Value = 產出編號 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                new SqlParameter
                {
                    ParameterName = "生產日期",
                    Value = 生產日期 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.DateTime,
                },
                new SqlParameter
                {
                    ParameterName = "生產班別",
                    Size = 2,
                    Value = 生產班別 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "生產機台",
                    Size = 16,
                    Value = 生產機台 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "生產人員1",
                    Size = 6,
                    Value = 生產人員1 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "生產人員2",
                    Size = 6,
                    Value = 生產人員2 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "產出數量",
                    Value = 產出數量 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                new SqlParameter
                {
                    ParameterName = "不良數量",
                    Value = 不良數量 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                new SqlParameter
                {
                    ParameterName = "HOST_NAME",
                    Size = 20,
                    Value = HOST_NAME ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "HOST_IP",
                    Size = 20,
                    Value = HOST_IP ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                parameterreturnValue,
            };
            var _ = await _context.Database.ExecuteSqlRawAsync("EXEC @returnValue = [dbo].[WIP_001_生產回報_產出資料_記錄更新] @產出編號 = @產出編號, @生產日期 = @生產日期, @生產班別 = @生產班別, @生產機台 = @生產機台, @生產人員1 = @生產人員1, @生產人員2 = @生產人員2, @產出數量 = @產出數量, @不良數量 = @不良數量, @HOST_NAME = @HOST_NAME, @HOST_IP = @HOST_IP", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

        public virtual async Task<int> WIP_001_生產回報_產出資料_記錄新增Async(int? 回報編號, DateTime? 生產日期, string 生產班別, string 生產機台, string 生產人員1, string 生產人員2, int? 產出數量, int? 不良數量, string HOST_NAME, string HOST_IP, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "回報編號",
                    Value = 回報編號 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                new SqlParameter
                {
                    ParameterName = "生產日期",
                    Value = 生產日期 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.DateTime,
                },
                new SqlParameter
                {
                    ParameterName = "生產班別",
                    Size = 2,
                    Value = 生產班別 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "生產機台",
                    Size = 16,
                    Value = 生產機台 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "生產人員1",
                    Size = 6,
                    Value = 生產人員1 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "生產人員2",
                    Size = 6,
                    Value = 生產人員2 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "產出數量",
                    Value = 產出數量 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                new SqlParameter
                {
                    ParameterName = "不良數量",
                    Value = 不良數量 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                new SqlParameter
                {
                    ParameterName = "HOST_NAME",
                    Size = 20,
                    Value = HOST_NAME ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "HOST_IP",
                    Size = 20,
                    Value = HOST_IP ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                parameterreturnValue,
            };
            var _ = await _context.Database.ExecuteSqlRawAsync("EXEC @returnValue = [dbo].[WIP_001_生產回報_產出資料_記錄新增] @回報編號 = @回報編號, @生產日期 = @生產日期, @生產班別 = @生產班別, @生產機台 = @生產機台, @生產人員1 = @生產人員1, @生產人員2 = @生產人員2, @產出數量 = @產出數量, @不良數量 = @不良數量, @HOST_NAME = @HOST_NAME, @HOST_IP = @HOST_IP", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }
    }
}

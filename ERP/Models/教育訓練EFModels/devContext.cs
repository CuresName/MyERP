// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace ERP.教育訓練EFModels;

public partial class devContext : DbContext
{
    public devContext(DbContextOptions<devContext> options)
        : base(options)
    {
    }

    public virtual DbSet<員工職務表> 員工職務表 { get; set; }

    public virtual DbSet<員工表> 員工表 { get; set; }

    public virtual DbSet<教育訓練檔案> 教育訓練檔案 { get; set; }

    public virtual DbSet<教育訓練計畫表> 教育訓練計畫表 { get; set; }

    public virtual DbSet<教育訓練計畫表內容> 教育訓練計畫表內容 { get; set; }

    public virtual DbSet<文件表> 文件表 { get; set; }

    public virtual DbSet<申請表> 申請表 { get; set; }

    public virtual DbSet<職務文件關聯表> 職務文件關聯表 { get; set; }

    public virtual DbSet<職務表> 職務表 { get; set; }

    public virtual DbSet<部門表> 部門表 { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<員工職務表>(entity =>
        {
            entity.Property(e => e.員工編號).HasMaxLength(10);
            entity.Property(e => e.職務).HasMaxLength(50);
        });

        modelBuilder.Entity<員工表>(entity =>
        {
            entity.HasKey(e => e.員工編號);

            entity.Property(e => e.員工編號).HasMaxLength(10);
            entity.Property(e => e.報到日期).HasColumnType("date");
            entity.Property(e => e.姓名).HasMaxLength(10);
            entity.Property(e => e.性別).HasMaxLength(1);
            entity.Property(e => e.職稱).HasMaxLength(50);
        });

        modelBuilder.Entity<教育訓練檔案>(entity =>
        {
            entity.HasKey(e => e.檔案流水號);

            entity.Property(e => e.檔案名稱).HasMaxLength(100);
        });

        modelBuilder.Entity<教育訓練計畫表>(entity =>
        {
            entity.HasKey(e => e.計畫表流水號).HasName("PK_計畫表");

            entity.Property(e => e.HOST_IP)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.HOST_NAME)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.KEYIN_DATE).HasColumnType("datetime");
            entity.Property(e => e.MAN_ID)
                .HasMaxLength(6)
                .IsUnicode(false);
            entity.Property(e => e.建檔日期).HasColumnType("datetime");
            entity.Property(e => e.計畫表編號).HasMaxLength(50);
        });

        modelBuilder.Entity<教育訓練計畫表內容>(entity =>
        {
            entity.HasKey(e => e.計畫表內容流水號).HasName("PK_教育訓練計畫表");

            entity.Property(e => e.HOST_IP)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.HOST_NAME)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.KEYIN_DATE).HasColumnType("datetime");
            entity.Property(e => e.MAN_ID)
                .HasMaxLength(6)
                .IsUnicode(false);
            entity.Property(e => e.建檔日期).HasColumnType("datetime");
            entity.Property(e => e.提出單位).HasMaxLength(50);
            entity.Property(e => e.計畫表編號).HasMaxLength(50);
            entity.Property(e => e.訓練方式).HasMaxLength(50);
            entity.Property(e => e.課程名稱).HasMaxLength(50);
            entity.Property(e => e.課程大綱).HasMaxLength(1000);
            entity.Property(e => e.講師).HasMaxLength(50);
            entity.Property(e => e.預計上課日期).HasColumnType("date");
            entity.Property(e => e.預計參訓人數).HasMaxLength(50);
            entity.Property(e => e.預計總費用).HasMaxLength(50);
            entity.Property(e => e.預計費用).HasMaxLength(50);
            entity.Property(e => e.類別).HasMaxLength(50);
        });

        modelBuilder.Entity<文件表>(entity =>
        {
            entity.HasKey(e => e.文件編號);

            entity.Property(e => e.文件編號)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.HOST_IP)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.HOST_NAME)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.KEYIN_DATE).HasColumnType("date");
            entity.Property(e => e.MAN_ID)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.建檔日期).HasColumnType("date");
            entity.Property(e => e.文件名稱)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<申請表>(entity =>
        {
            entity.HasKey(e => e.申請表流水號);

            entity.Property(e => e.HOST_IP)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.HOST_NAME)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.KEYIN_DATE).HasColumnType("datetime");
            entity.Property(e => e.MAN_ID)
                .HasMaxLength(6)
                .IsUnicode(false);
            entity.Property(e => e.上課人員)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.上課地點)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.主辦單位)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.備註)
                .HasMaxLength(1000)
                .IsUnicode(false);
            entity.Property(e => e.建檔日期).HasColumnType("datetime");
            entity.Property(e => e.時間)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.申請人)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.申請日期).HasColumnType("date");
            entity.Property(e => e.申請表編號)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.申請部門)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.聯絡單位)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.訓練方式)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.訓練日期).HasColumnType("date");
            entity.Property(e => e.訓練目的)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.訓練管理單位協助事項)
                .HasMaxLength(1000)
                .IsUnicode(false);
            entity.Property(e => e.訓練費用)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.課程名稱)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.講師)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<職務文件關聯表>(entity =>
        {
            entity.Property(e => e.文件編號)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.職務).HasMaxLength(50);
        });

        modelBuilder.Entity<職務表>(entity =>
        {
            entity.HasKey(e => e.職務);

            entity.Property(e => e.職務).HasMaxLength(50);
            entity.Property(e => e.其它).HasMaxLength(50);
            entity.Property(e => e.職別).HasMaxLength(50);
            entity.Property(e => e.職級).HasMaxLength(50);
            entity.Property(e => e.訓練方式).HasMaxLength(50);
        });

        modelBuilder.Entity<部門表>(entity =>
        {
            entity.HasKey(e => e.部門編號);

            entity.Property(e => e.部門編號).ValueGeneratedNever();
            entity.Property(e => e.部門名稱)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}
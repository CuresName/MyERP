// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace ERP.Models;

public partial class erpEntitie : DbContext
{
    public erpEntitie(DbContextOptions<erpEntitie> options): base(options)
    {
    }

    public virtual DbSet<QA_018_物質調查記錄_主檔> QA_018_物質調查記錄_主檔 { get; set; }

    public virtual DbSet<QA_018_物質調查記錄_明細> QA_018_物質調查記錄_明細 { get; set; }

    public virtual DbSet<QA_018_物質調查記錄_附件> QA_018_物質調查記錄_附件 { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<QA_018_物質調查記錄_主檔>(entity =>
        {
            entity.HasKey(e => e.物質調查流水號);

            entity.ToTable(tb => tb.HasTrigger("QA_018_物質調查記錄_主檔_新增更新"));

            entity.Property(e => e.HOST_IP)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.HOST_NAME)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.KEYIN_DATE).HasColumnType("datetime");
            entity.Property(e => e.MAN_ID)
                .HasMaxLength(6)
                .IsUnicode(false);
            entity.Property(e => e.回覆期限).HasColumnType("datetime");
            entity.Property(e => e.寄送日期).HasColumnType("datetime");
            entity.Property(e => e.寄送狀態)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false);
            entity.Property(e => e.建檔日期).HasColumnType("datetime");
            entity.Property(e => e.物質調查編號)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.結案)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false);
            entity.Property(e => e.結案日期).HasColumnType("datetime");
            entity.Property(e => e.調查事項)
                .IsRequired()
                .HasMaxLength(1000)
                .IsUnicode(false);
            
            entity.Property(e => e.調查事項英文)
                .HasMaxLength(1000)
                .IsUnicode(false);

            entity.Property(e => e.調查人員)
                .IsRequired()
                .HasMaxLength(6)
                .IsUnicode(false);
            entity.Property(e => e.調查日期).HasColumnType("datetime");
            entity.Property(e => e.附件名稱).HasMaxLength(4000);
            entity.Property(e => e.附件路徑)
                .HasMaxLength(1000)
                .IsUnicode(false);
        });

        modelBuilder.Entity<QA_018_物質調查記錄_明細>(entity =>
        {
            entity.HasKey(e => e.物質調查明細流水號);

            entity.Property(e => e.HOST_IP)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.HOST_NAME)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.ISO_EMAIL)
                .IsRequired()
                .HasMaxLength(1000)
                .IsUnicode(false);
            entity.Property(e => e.KEYIN_DATE).HasColumnType("datetime");
            entity.Property(e => e.MAN_ID)
                .HasMaxLength(6)
                .IsUnicode(false);
            entity.Property(e => e.供應商編號)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.備註)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.回覆日期).HasColumnType("datetime");
            entity.Property(e => e.回覆狀態)
                .HasMaxLength(1)
                .IsUnicode(false);
            entity.Property(e => e.寄送日期).HasColumnType("datetime");
            entity.Property(e => e.建檔日期).HasColumnType("datetime");

            entity.HasOne(d => d.物質調查流水號Navigation).WithMany(p => p.QA_018_物質調查記錄_明細)
                .HasForeignKey(d => d.物質調查流水號)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_QA_018_物質調查記錄_明細_QA_018_物質調查記錄_主檔");
        });

        modelBuilder.Entity<QA_018_物質調查記錄_附件>(entity =>
        {
            entity.HasKey(e => e.物質調查附件流水號);

            entity.ToTable(tb =>
                {
                    tb.HasTrigger("QA_018_物質調查記錄_附件_刪除");
                    tb.HasTrigger("QA_018_物質調查記錄_附件_新增更新");
                });

            entity.Property(e => e.HOST_IP)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.HOST_NAME)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.KEYIN_DATE).HasColumnType("datetime");
            entity.Property(e => e.MAN_ID)
                .HasMaxLength(6)
                .IsUnicode(false);
            entity.Property(e => e.建檔日期).HasColumnType("datetime");
            entity.Property(e => e.附件檔名)
                .IsRequired()
                .HasMaxLength(1000);

            entity.HasOne(d => d.物質調查流水號Navigation).WithMany(p => p.QA_018_物質調查記錄_附件)
                .HasForeignKey(d => d.物質調查流水號)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_QA_018_物質調查記錄_附件_QA_018_物質調查記錄_主檔");
        });

        OnModelCreatingGeneratedFunctions(modelBuilder);
        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}
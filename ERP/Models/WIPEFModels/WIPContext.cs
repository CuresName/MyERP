// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace ERP.Models.WIPEFModels;

public partial class WIPContext : DbContext
{
    public WIPContext(DbContextOptions<WIPContext> options)
        : base(options)
    {
    }

    public virtual DbSet<WIP_001_生產回報_不良品> WIP_001_生產回報_不良品 { get; set; }

    public virtual DbSet<WIP_001_生產回報_產出資料> WIP_001_生產回報_產出資料 { get; set; }

    public virtual DbSet<WIP_001_生產回報資料來源> WIP_001_生產回報資料來源 { get; set; }

    public virtual DbSet<WIP_001_產線現有班別> WIP_001_產線現有班別 { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<WIP_001_生產回報_不良品>(entity =>
        {
            entity.HasKey(e => new { e.回報編號, e.不良編號 });

            entity.ToTable(tb => tb.HasTrigger("WIP_001_生產回報_不良品_新增修改刪除"));

            entity.Property(e => e.HOST_IP).HasMaxLength(20);
            entity.Property(e => e.HOST_NAME).HasMaxLength(20);
            entity.Property(e => e.KEYIN_DATE).HasColumnType("datetime");
            entity.Property(e => e.X_rays_DATE).HasColumnType("datetime");
            entity.Property(e => e.X_rays_HOST_IP)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.X_rays_HOST_NAME)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.X_rays_MAN_ID)
                .HasMaxLength(6)
                .IsUnicode(false);
            entity.Property(e => e.不良品流水號).ValueGeneratedOnAdd();
            entity.Property(e => e.建檔日期).HasColumnType("datetime");
        });

        modelBuilder.Entity<WIP_001_生產回報_產出資料>(entity =>
        {
            entity.HasKey(e => e.產出編號);

            entity.ToTable(tb =>
                {
                    tb.HasTrigger("WIP_001_生產回報_產出資料_刪除");
                    tb.HasTrigger("WIP_001_生產回報_產出資料_新增修改");
                });

            entity.HasIndex(e => e.回報編號, "IX_WIP_001_生產回報_產出資料_回報編號");

            entity.HasIndex(e => e.生產日期, "WIP_001_生產回報_產出資料_日期_編號_班別_機台_數量");

            entity.Property(e => e.HOST_IP)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.HOST_NAME)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.KEYIN_DATE).HasColumnType("datetime");
            entity.Property(e => e.年)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.年月)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.建檔日期).HasColumnType("datetime");
            entity.Property(e => e.日)
                .HasMaxLength(4)
                .IsUnicode(false);
            entity.Property(e => e.星期)
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.月)
                .HasMaxLength(4)
                .IsUnicode(false);
            entity.Property(e => e.生產人員1)
                .HasMaxLength(6)
                .IsUnicode(false);
            entity.Property(e => e.生產人員2)
                .HasMaxLength(6)
                .IsUnicode(false);
            entity.Property(e => e.生產日期).HasColumnType("datetime");
            entity.Property(e => e.生產機台)
                .HasMaxLength(16)
                .IsUnicode(false);
            entity.Property(e => e.生產班別)
                .IsRequired()
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.金線編號)
                .HasMaxLength(8)
                .IsUnicode(false);
        });

        modelBuilder.Entity<WIP_001_生產回報資料來源>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("WIP_001_生產回報資料來源");

            entity.Property(e => e.Assembly_Yield).HasColumnType("numeric(15, 5)");
            entity.Property(e => e.CAP不良率).HasColumnType("numeric(15, 5)");
            entity.Property(e => e.CURE總重量).HasColumnType("numeric(16, 9)");
            entity.Property(e => e.Die_HOST_IP)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Die_HOST_NAME)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Die_KEYIN_DATE).HasColumnType("datetime");
            entity.Property(e => e.Die_MAN_ID)
                .HasMaxLength(6)
                .IsUnicode(false);
            entity.Property(e => e.Die_Over_Qty).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.Die_Over_Yield).HasColumnType("numeric(16, 5)");
            entity.Property(e => e.Die_Shortage_Qty).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.Die_Shortage_Yield).HasColumnType("numeric(16, 5)");
            entity.Property(e => e.Die_建檔日期).HasColumnType("datetime");
            entity.Property(e => e.Function_Fail不良率).HasColumnType("numeric(15, 5)");
            entity.Property(e => e.HOST_IP)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.HOST_NAME)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.KEYIN_DATE).HasColumnType("datetime");
            entity.Property(e => e.Lead不良率).HasColumnType("numeric(15, 5)");
            entity.Property(e => e.Lost不良率).HasColumnType("numeric(15, 5)");
            entity.Property(e => e.Mapping_File)
                .HasMaxLength(1)
                .IsUnicode(false);
            entity.Property(e => e.Marking不良率).HasColumnType("numeric(15, 5)");
            entity.Property(e => e.NO_WAFER)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false);
            entity.Property(e => e.Open_Short_Vision_Lost不良率).HasColumnType("numeric(15, 5)");
            entity.Property(e => e.Open_Short不良率).HasColumnType("numeric(15, 5)");
            entity.Property(e => e.Overall_Yield).HasColumnType("numeric(14, 5)");
            entity.Property(e => e.SX1300測試批號)
                .HasMaxLength(12)
                .IsUnicode(false);
            entity.Property(e => e.Short不良率).HasColumnType("numeric(15, 5)");
            entity.Property(e => e.Test_Software_Rev)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.Tester_ID)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Tester_ID_2)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Tester_ID_3)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Time_Lot_End).HasColumnType("datetime");
            entity.Property(e => e.Time_Lot_Start).HasColumnType("datetime");
            entity.Property(e => e.VF_Fail不良率).HasColumnType("numeric(15, 5)");
            entity.Property(e => e.Vision_Lost不良率).HasColumnType("numeric(15, 5)");
            entity.Property(e => e.Vision不良率).HasColumnType("numeric(15, 5)");
            entity.Property(e => e.X_rays_DATE).HasColumnType("datetime");
            entity.Property(e => e.X_rays_HOST_IP)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.X_rays_HOST_NAME)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.X_rays_MAN_ID)
                .HasMaxLength(6)
                .IsUnicode(false);
            entity.Property(e => e.不良率).HasColumnType("numeric(15, 5)");
            entity.Property(e => e.主要生產機台)
                .HasMaxLength(16)
                .IsUnicode(false);
            entity.Property(e => e.停止生產)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false);
            entity.Property(e => e.刀痕寬度).HasColumnType("numeric(14, 4)");
            entity.Property(e => e.刀痕寬度上限).HasColumnType("numeric(14, 4)");
            entity.Property(e => e.切割刀具型號)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.切割道寬度X).HasColumnType("numeric(14, 4)");
            entity.Property(e => e.切割道寬度Y).HasColumnType("numeric(14, 4)");
            entity.Property(e => e.刻號)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.各站Assembly_Yield).HasColumnType("numeric(14, 5)");
            entity.Property(e => e.單顆重量).HasColumnType("numeric(16, 14)");
            entity.Property(e => e.委託項目)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.客供品入庫編號)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.客供品異常單號)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.客戶編號)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.封裝不良率).HasColumnType("numeric(15, 5)");
            entity.Property(e => e.工單投入量).HasColumnType("numeric(14, 2)");
            entity.Property(e => e.工單編號)
                .HasMaxLength(12)
                .IsUnicode(false);
            entity.Property(e => e.已上傳)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false);
            entity.Property(e => e.建檔日期).HasColumnType("datetime");
            entity.Property(e => e.彈匣編號)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.彈匣編號2)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.彈匣編號3)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.彈匣編號4)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.彈匣編號5)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.彈匣編號6)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.成品大類別)
                .HasMaxLength(16)
                .IsUnicode(false);
            entity.Property(e => e.成品小類別)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.成品料號)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.投產日期).HasColumnType("datetime");
            entity.Property(e => e.抽樣方法)
                .HasMaxLength(16)
                .IsUnicode(false);
            entity.Property(e => e.排程日期).HasColumnType("datetime");
            entity.Property(e => e.排程生產機台)
                .HasMaxLength(16)
                .IsUnicode(false);
            entity.Property(e => e.是否CP)
                .HasMaxLength(1)
                .IsUnicode(false);
            entity.Property(e => e.本批不良率).HasColumnType("numeric(15, 5)");
            entity.Property(e => e.本批良品率).HasColumnType("numeric(15, 5)");
            entity.Property(e => e.標準CAP比率).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.標準Die_Over比率).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.標準Die_Shortage比率).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.標準FVI_Vision比率).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.標準Short比率).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.標準單顆重量).HasColumnType("numeric(16, 14)");
            entity.Property(e => e.標準封裝單站良率).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.標準封裝良率).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.標準測試Function_Fail比率).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.標準測試Lead比率).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.標準測試Lost比率).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.標準測試Marking比率).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.標準測試Open_Short_Vision_Lost比率)
                .HasColumnType("numeric(15, 4)")
                .HasColumnName("標準測試Open/Short/Vision/Lost比率");
            entity.Property(e => e.標準測試Open_Short比率)
                .HasColumnType("numeric(15, 4)")
                .HasColumnName("標準測試Open/Short比率");
            entity.Property(e => e.標準測試VF_Fail比率).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.標準測試Vision_Lost比率)
                .HasColumnType("numeric(15, 4)")
                .HasColumnName("標準測試Vision/Lost比率");
            entity.Property(e => e.標準測試Vision比率).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.標準測試單站良率).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.流程卡Assy_Yield).HasColumnType("numeric(24, 12)");
            entity.Property(e => e.流程卡號)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false);
            entity.Property(e => e.流程卡類別)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.烘烤後可生產日期).HasColumnType("datetime");
            entity.Property(e => e.生產備註)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.生產站別)
                .IsRequired()
                .HasMaxLength(16)
                .IsUnicode(false);
            entity.Property(e => e.生產站別彙整)
                .HasMaxLength(16)
                .IsUnicode(false);
            entity.Property(e => e.產出日期).HasColumnType("datetime");
            entity.Property(e => e.異常狀況)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.異常處理方式)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.砲彈坑)
                .HasMaxLength(1)
                .IsUnicode(false);
            entity.Property(e => e.砲彈坑檢測結案)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false);
            entity.Property(e => e.砲彈坑生產機台)
                .HasMaxLength(16)
                .IsUnicode(false);
            entity.Property(e => e.砲彈坑結案日期).HasColumnType("datetime");
            entity.Property(e => e.結束回報)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false);
            entity.Property(e => e.良品率).HasColumnType("numeric(15, 5)");
            entity.Property(e => e.要求CAP比率).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.要求Die_Over比率).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.要求Die_Shortage比率).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.要求Function_Fail_比率).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.要求Lead_比率).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.要求Lost_比率).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.要求Marking_比率).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.要求Open_Short_Vision_Lost_比率).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.要求Open_Short_比率).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.要求Short比率).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.要求VF_Fail比率).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.要求Vision_Lost_比率).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.要求Vision_比率).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.要求單站良率).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.要求封裝Hold比率).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.要求封裝良率).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.要求良品率).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.要求警告良品率).HasColumnType("numeric(15, 4)");
            entity.Property(e => e.訂單數量).HasColumnType("numeric(14, 2)");
            entity.Property(e => e.訂單編號)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false);
            entity.Property(e => e.預估生產時數).HasColumnType("numeric(14, 2)");
        });

        modelBuilder.Entity<WIP_001_產線現有班別>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("WIP_001_產線現有班別");

            entity.Property(e => e.中文說明)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.班別歸屬)
                .IsRequired()
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.生產班別)
                .IsRequired()
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.產能班別)
                .IsRequired()
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.英文說明)
                .HasMaxLength(30)
                .IsUnicode(false);
        });

        OnModelCreatingGeneratedProcedures(modelBuilder);
        OnModelCreatingGeneratedFunctions(modelBuilder);
        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}